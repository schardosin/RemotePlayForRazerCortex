apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'dagger.hilt.android.plugin'

// 3.1.0 = 3100002  (i.e 2nd build of 3.1.0)
// 3.0.1 = 3001001  (i.e 1st build of 3.0.1)
def versionMajor = 0 // 0 ~ 99
def versionMinor = 5 // 0 ~ 9
def versionPatch = 2 // 0 ~ 99

// TODO: can read this from Jenkin build number
// (increment this by 1 for every release of a build)
// You can reset this to 0 again so long as the one of the other version number is incremented
// It is not visible to public user
def versionBuild = 0 // 0 ~ 999

android {
    ndkVersion "26.2.11394342"

    compileSdk 34

    namespace 'com.limelight'

    defaultConfig {
        minSdk 28
        targetSdk 34

        // Made this into a formula so that we cannot install older build over newer builds.
        versionCode = (versionMajor * 1000 + (versionMinor % 10) * 100 + (versionPatch % 100))*1000 + versionBuild
        versionName = "${versionMajor}.${versionMinor}.${versionPatch}"
        def internalVersion = versionCode.toString()
        buildConfigField("String", "INTERNAL_VERSION", "\".$internalVersion\"")

        // Generate native debug symbols to allow Google Play to symbolicate our native crashes
        ndk.debugSymbolLevel = 'FULL'
    }


    flavorDimensions.add("root")
    flavorDimensions.add("app")

    buildFeatures {
        buildConfig = true
        viewBinding = true
        dataBinding = true
        aidl = true
    }


    ext.readFile = { filePath ->
        return new File(filePath).text
    }



    productFlavors {
        moonlight {
            applicationId "com.limelight"
            dimension "app"
            resValue "string", "app_label", "Moonlight"
            resValue "string", "app_label_root", "Moonlight (Root)"
            buildConfigField "long", "BUILD_TIMESTAMP", System.currentTimeMillis().toString()
            buildConfigField "String", "DEFAULT_REMOTE_PLAY_CONFIG", "\"limelight\""
        }

        neuron {
            applicationId "com.razer.neuron"
            dimension "app"
            resValue "string", "app_label", "Remote Play"
            resValue "string", "app_label_root", "Remote Play (Root)"
            buildConfigField "long", "BUILD_TIMESTAMP", System.currentTimeMillis().toString()
            buildConfigField "String", "DEFAULT_REMOTE_PLAY_CONFIG", "\"razer\""
        }

        root {
            // Android O has native mouse capture, so don't show the rooted
            // version to devices running O on the Play Store.
            maxSdk 25

            externalNativeBuild {
                ndkBuild {
                    arguments "PRODUCT_FLAVOR=root"
                }
            }

            applicationIdSuffix ".root"
            dimension "root"
            buildConfigField "boolean", "ROOT_BUILD", "true"
        }

        nonRoot {
            externalNativeBuild {
                ndkBuild {
                    arguments "PRODUCT_FLAVOR=nonRoot"
                }
            }

            applicationIdSuffix ""
            dimension "root"
            buildConfigField "boolean", "ROOT_BUILD", "false"
        }


    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    lint {
        disable 'MissingTranslation'
        lintConfig file('lint.xml')
    }

    bundle {
        language {
            // Avoid splitting by language, since we allow users
            // to manually switch language in settings.
            enableSplit = false
        }
        density {
            // FIXME: This should not be necessary but we get
            // weird crashes due to missing drawable resources
            // when this split is enabled.
            enableSplit = false
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            // To whomever is releasing/using an APK in release mode with
            // Moonlight's official application ID, please stop. I see every
            // single one of your crashes in my Play Console and it makes
            // Moonlight's reliability look worse and makes it more difficult
            // to distinguish real crashes from your crashy VR app. Seriously,
            // 44 of the *same* native crash in 72 hours and a few each of
            // several other crashes.
            //
            // This is technically not your fault. I would have hoped Google
            // would validate the signature of the APK before attributing
            // the crash to it. I asked their Play Store support about this
            // and they said they don't and don't have plans to, so that sucks.
            //
            // In any case, it's bad form to release an APK using someone
            // else's application ID. There is no legitimate reason, that
            // anyone would need to comment out the following line, except me
            // when I release an official signed Moonlight build. If you feel
            // like doing so would solve something, I can tell you it will not.
            // You can't upgrade an app while retaining data without having the
            // same signature as the official version. Nor can you post it on
            // the Play Store, since that application ID is already taken.
            // Reputable APK hosting websites similarly validate the signature
            // is consistent with the Play Store and won't allow an APK that
            // isn't signed the same as the original.
            //
            // I wish any and all people using Moonlight as the basis of other
            // cool projects the best of luck with their efforts. All I ask
            // is to please change the applicationId before you publish.
            //
            // TL;DR: Leave the following line alone!
            applicationIdSuffix ""

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        ndkBuild {
            path "src/main/jni/Android.mk"
        }
    }

    // Required to enable inlining of functions especially for Kotlin extensions
    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
}
ext {
    version_lifecycle = "2.0.0"
    version_constraint_layout = "2.0.4"
    version_kotlin_core_ktx = "1.5.0"
    version_kotlin_fragment_ktx = "1.2.5"
    version_appcompat = "1.6.0"
    version_gson = "2.9.0"
    kotlinx_coroutines = "1.9.0"
}


dependencies {
    implementation 'org.bouncycastle:bcprov-jdk18on:1.77'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.77'
    implementation 'org.jcodec:jcodec:0.2.5'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'org.jmdns:jmdns:3.5.9'

    //region Neuron dependencies
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$version_lifecycle"
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"
    implementation "androidx.core:core-ktx:$version_kotlin_core_ktx"
    implementation "androidx.fragment:fragment-ktx:$version_kotlin_fragment_ktx"
    implementation "androidx.palette:palette-ktx:1.0.0"
    implementation "androidx.appcompat:appcompat:$version_appcompat"
    implementation "com.google.code.gson:gson:$version_gson"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines"

    implementation "com.google.dagger:hilt-android:2.48"
    implementation "androidx.recyclerview:recyclerview:1.3.2"
    // Using 1.10.0, because One UI 6.1 has problem with later version
    // check S24ultra first before upgrading
    implementation "com.google.android.material:material:1.10.0"
    kapt "com.google.dagger:hilt-compiler:2.48"
    implementation "hu.autsoft:krate:2.0.0"
    implementation "androidx.navigation:navigation-fragment-ktx:2.7.7"
    implementation "androidx.navigation:navigation-ui-ktx:2.7.7"
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //endregion
}
